{"ast":null,"code":"var _jsxFileName = \"/Users/galbinyamin/Desktop/NVIDIA/excel-analysis/src/components/FileUpload.js\";\nimport React, { useState } from 'react';\nimport XLSX from 'xlsx/dist/xlsx.full.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileUpload,\n  searchString\n}) => {\n  const handleFileChange = async e => {\n    const uploadedFile = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const analyzedData = analyzeExcelData(workbook, searchString); // Pass searchString here\n      onFileUpload(analyzedData);\n    };\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n  const analyzeExcelData = (workbook, searchString) => {\n    const analyzedResults = {\n      Kanban: 0,\n      'In Process': 0,\n      Failed: 0\n    };\n    const sheetName = workbook.SheetNames[0];\n    const sheet = workbook.Sheets[sheetName];\n    const rows = XLSX.utils.sheet_to_json(sheet, {\n      header: 1\n    });\n\n    // Assuming the header row is the first row in the sheet\n    const headerRow = rows[0];\n    for (let i = 1; i < rows.length; i++) {\n      const row = rows[i];\n      const pn = row[headerRow.indexOf('PN')];\n      const lastStation = row[headerRow.indexOf('Last Station')];\n      const returned = row[headerRow.indexOf('Returned')];\n      const woType = row[headerRow.indexOf('Wo Type')];\n      const condition = row[headerRow.indexOf('Condition')];\n      if (pn && lastStation && returned !== 0 && woType === 'ARRIBA') {\n        if (lastStation === 1261 || lastStation === 1181) {\n          analyzedResults.Kanban += 1;\n        } else if (condition === 'Fail') {\n          analyzedResults.Failed += 1;\n        } else if (condition === 'Pass') {\n          analyzedResults['In Process'] += 1;\n        }\n      }\n    }\n    return analyzedResults;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".xlsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","FileUpload","onFileUpload","searchString","handleFileChange","e","uploadedFile","target","files","reader","FileReader","onload","data","Uint8Array","result","workbook","read","type","analyzedData","analyzeExcelData","readAsArrayBuffer","analyzedResults","Kanban","Failed","sheetName","SheetNames","sheet","Sheets","rows","utils","sheet_to_json","header","headerRow","i","length","row","pn","indexOf","lastStation","returned","woType","condition","className","children","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/galbinyamin/Desktop/NVIDIA/excel-analysis/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport XLSX from 'xlsx/dist/xlsx.full.min';\n\nconst FileUpload = ({ onFileUpload, searchString }) => {\n  const handleFileChange = async (e) => {\n    const uploadedFile = e.target.files[0];\n\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n\n      const analyzedData = analyzeExcelData(workbook, searchString); // Pass searchString here\n      onFileUpload(analyzedData);\n    };\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  const analyzeExcelData = (workbook, searchString) => {\n    const analyzedResults = {\n      Kanban: 0,\n      'In Process': 0,\n      Failed: 0,\n    };\n  \n    const sheetName = workbook.SheetNames[0];\n    const sheet = workbook.Sheets[sheetName];\n    const rows = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n  \n    // Assuming the header row is the first row in the sheet\n    const headerRow = rows[0];\n  \n    for (let i = 1; i < rows.length; i++) {\n      const row = rows[i];\n      const pn = row[headerRow.indexOf('PN')];\n      const lastStation = row[headerRow.indexOf('Last Station')];\n      const returned = row[headerRow.indexOf('Returned')];\n      const woType = row[headerRow.indexOf('Wo Type')];\n      const condition = row[headerRow.indexOf('Condition')];\n  \n      if (pn && lastStation && returned !== 0 && woType === 'ARRIBA') {\n        if (lastStation === 1261 || lastStation === 1181) {\n          analyzedResults.Kanban += 1;\n        } else if (condition === 'Fail') {\n          analyzedResults.Failed += 1;\n        } else if (condition === 'Pass') {\n          analyzedResults['In Process'] += 1;\n        }\n      }\n    }\n  \n    return analyzedResults;\n  };\n  \n\n  return (\n    <div className=\"file-upload\">\n      <input type=\"file\" onChange={handleFileChange} accept=\".xlsx\" />\n    </div>\n  );\n};\n\nexport default FileUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}