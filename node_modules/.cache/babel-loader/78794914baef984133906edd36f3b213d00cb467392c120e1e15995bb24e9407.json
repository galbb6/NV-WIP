{"ast":null,"code":"var _jsxFileName = \"/Users/galbinyamin/Desktop/NVIDIA/excel-analysis/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\n// src/components/FileUpload.js\nimport React, { useState } from 'react';\nimport XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileUpload\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleFileChange = async e => {\n    const uploadedFiles = e.target.files;\n    setFiles(uploadedFiles);\n    const analyzedData = await analyzeFiles(uploadedFiles);\n    onFileUpload(analyzedData);\n  };\n  const analyzeFiles = async uploadedFiles => {\n    // Analyze the files and return the analyzed data\n    // ... Your analysis logic here ...\n    return analyzedData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      multiple: true,\n      accept: \".xlsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","FileUpload","onFileUpload","_s","files","setFiles","handleFileChange","e","uploadedFiles","target","analyzedData","analyzeFiles","className","children","type","onChange","multiple","accept","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/galbinyamin/Desktop/NVIDIA/excel-analysis/src/components/FileUpload.js"],"sourcesContent":["// src/components/FileUpload.js\nimport React, { useState } from 'react';\nimport XLSX from 'xlsx';\n\nconst FileUpload = ({ onFileUpload }) => {\n  const [files, setFiles] = useState([]);\n\n  const handleFileChange = async (e) => {\n    const uploadedFiles = e.target.files;\n    setFiles(uploadedFiles);\n\n    const analyzedData = await analyzeFiles(uploadedFiles);\n    onFileUpload(analyzedData);\n  };\n\n  const analyzeFiles = async (uploadedFiles) => {\n    // Analyze the files and return the analyzed data\n    // ... Your analysis logic here ...\n    return analyzedData;\n  };\n\n  return (\n    <div className=\"file-upload\">\n      <input type=\"file\" onChange={handleFileChange} multiple accept=\".xlsx\" />\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpC,MAAMC,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACL,KAAK;IACpCC,QAAQ,CAACG,aAAa,CAAC;IAEvB,MAAME,YAAY,GAAG,MAAMC,YAAY,CAACH,aAAa,CAAC;IACtDN,YAAY,CAACQ,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,aAAa,IAAK;IAC5C;IACA;IACA,OAAOE,YAAY;EACrB,CAAC;EAED,oBACEV,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1Bb,OAAA;MAAOc,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAET,gBAAiB;MAACU,QAAQ;MAACC,MAAM,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtBIF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}